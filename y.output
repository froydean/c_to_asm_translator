Terminals unused in grammar

    NOT


State 78 conflicts: 18 shift/reduce
State 79 conflicts: 18 shift/reduce
State 89 conflicts: 1 shift/reduce


Grammar

    0 $accept: commands $end

    1 commands: %empty
    2         | commands command

    3 command: assignment SEMICOLON
    4        | unary_opertr VAR SEMICOLON
    5        | VAR unary_opertr SEMICOLON
    6        | print SEMICOLON
    7        | ret SEMICOLON
    8        | if
    9        | while

   10 assignment: VAR assign_operator expr

   11 expr2: expr

   12 expr: expr bin_opertr expr
   13     | expr comparison_operator expr
   14     | INC VAR
   15     | DEC VAR
   16     | VAR INC
   17     | VAR DEC
   18     | VAR
   19     | NUMBER

   20 $@1: %empty

   21 expr: '(' $@1 expr ')'

   22 print: PRINT '(' expr ')'

   23 ret: RETURN expr
   24    | RETURN

   25 body: '{' commands '}'
   26     | command

   27 else: %empty
   28     | ELSE body

   29 $@2: %empty

   30 $@3: %empty

   31 if: IF '(' expr2 ')' $@2 body $@3 else

   32 $@4: %empty

   33 $@5: %empty

   34 while: WHILE $@4 '(' expr2 ')' $@5 body

   35 assign_operator: EQUAL
   36                | ADD_EQ
   37                | SUB_EQ
   38                | MULT_EQ
   39                | DIV_EQ
   40                | MOD_EQ
   41                | PUSHL_EQ
   42                | PUSHR_EQ
   43                | XOR_EQ
   44                | OR_EQ
   45                | AND_EQ

   46 comparison_operator: EQUAL_DOUBLE
   47                    | NOT_EQUAL
   48                    | MORE_EQ
   49                    | LESS_EQ
   50                    | LESS
   51                    | MORE
   52                    | AND
   53                    | OR

   54 bin_opertr: MINUS
   55           | PLUS
   56           | MULT
   57           | DIV
   58           | MOD
   59           | XOR
   60           | OR_SINGLE
   61           | AND_SINGLE
   62           | PUSHL
   63           | PUSHR

   64 unary_opertr: INC
   65             | DEC


Terminals, with rules where they appear

    $end (0) 0
    '(' (40) 21 22 31 34
    ')' (41) 21 22 31 34
    '{' (123) 25
    '}' (125) 25
    error (256)
    NUMBER <string> (258) 19
    VAR <string> (259) 4 5 10 14 15 16 17 18
    IF (260) 31
    ELSE (261) 28
    WHILE (262) 34
    RETURN (263) 23 24
    PRINT (264) 22
    ADD_EQ (265) 36
    SUB_EQ (266) 37
    MULT_EQ (267) 38
    DIV_EQ (268) 39
    MOD_EQ (269) 40
    MORE_EQ (270) 48
    LESS_EQ (271) 49
    NOT_EQUAL (272) 47
    EQUAL_DOUBLE (273) 46
    PUSHL_EQ (274) 41
    PUSHR_EQ (275) 42
    PUSHL (276) 62
    PUSHR (277) 63
    MORE (278) 51
    LESS (279) 50
    XOR_EQ (280) 43
    OR_EQ (281) 44
    AND_EQ (282) 45
    AND (283) 52
    OR (284) 53
    AND_SINGLE (285) 61
    MINUS (286) 54
    SEMICOLON (287) 3 4 5 6 7
    EQUAL (288) 35
    PLUS (289) 55
    MULT (290) 56
    DIV (291) 57
    NOT (292)
    MOD (293) 58
    XOR (294) 59
    OR_SINGLE (295) 60
    INC (296) 14 16 64
    DEC (297) 15 17 65


Nonterminals, with rules where they appear

    $accept (47)
        on left: 0
    commands (48)
        on left: 1 2
        on right: 0 2 25
    command (49)
        on left: 3 4 5 6 7 8 9
        on right: 2 26
    assignment (50)
        on left: 10
        on right: 3
    expr2 (51)
        on left: 11
        on right: 31 34
    expr (52)
        on left: 12 13 14 15 16 17 18 19 21
        on right: 10 11 12 13 21 22 23
    $@1 (53)
        on left: 20
        on right: 21
    print (54)
        on left: 22
        on right: 6
    ret (55)
        on left: 23 24
        on right: 7
    body (56)
        on left: 25 26
        on right: 28 31 34
    else (57)
        on left: 27 28
        on right: 31
    if (58)
        on left: 31
        on right: 8
    $@2 (59)
        on left: 29
        on right: 31
    $@3 (60)
        on left: 30
        on right: 31
    while (61)
        on left: 34
        on right: 9
    $@4 (62)
        on left: 32
        on right: 34
    $@5 (63)
        on left: 33
        on right: 34
    assign_operator (64)
        on left: 35 36 37 38 39 40 41 42 43 44 45
        on right: 10
    comparison_operator (65)
        on left: 46 47 48 49 50 51 52 53
        on right: 13
    bin_opertr (66)
        on left: 54 55 56 57 58 59 60 61 62 63
        on right: 12
    unary_opertr (67)
        on left: 64 65
        on right: 4 5


State 0

    0 $accept: . commands $end

    $default  reduce using rule 1 (commands)

    commands  go to state 1


State 1

    0 $accept: commands . $end
    2 commands: commands . command

    $end    shift, and go to state 2
    VAR     shift, and go to state 3
    IF      shift, and go to state 4
    WHILE   shift, and go to state 5
    RETURN  shift, and go to state 6
    PRINT   shift, and go to state 7
    INC     shift, and go to state 8
    DEC     shift, and go to state 9

    command       go to state 10
    assignment    go to state 11
    print         go to state 12
    ret           go to state 13
    if            go to state 14
    while         go to state 15
    unary_opertr  go to state 16


State 2

    0 $accept: commands $end .

    $default  accept


State 3

    5 command: VAR . unary_opertr SEMICOLON
   10 assignment: VAR . assign_operator expr

    ADD_EQ    shift, and go to state 17
    SUB_EQ    shift, and go to state 18
    MULT_EQ   shift, and go to state 19
    DIV_EQ    shift, and go to state 20
    MOD_EQ    shift, and go to state 21
    PUSHL_EQ  shift, and go to state 22
    PUSHR_EQ  shift, and go to state 23
    XOR_EQ    shift, and go to state 24
    OR_EQ     shift, and go to state 25
    AND_EQ    shift, and go to state 26
    EQUAL     shift, and go to state 27
    INC       shift, and go to state 8
    DEC       shift, and go to state 9

    assign_operator  go to state 28
    unary_opertr     go to state 29


State 4

   31 if: IF . '(' expr2 ')' $@2 body $@3 else

    '('  shift, and go to state 30


State 5

   34 while: WHILE . $@4 '(' expr2 ')' $@5 body

    $default  reduce using rule 32 ($@4)

    $@4  go to state 31


State 6

   23 ret: RETURN . expr
   24    | RETURN .

    NUMBER  shift, and go to state 32
    VAR     shift, and go to state 33
    INC     shift, and go to state 34
    DEC     shift, and go to state 35
    '('     shift, and go to state 36

    $default  reduce using rule 24 (ret)

    expr  go to state 37


State 7

   22 print: PRINT . '(' expr ')'

    '('  shift, and go to state 38


State 8

   64 unary_opertr: INC .

    $default  reduce using rule 64 (unary_opertr)


State 9

   65 unary_opertr: DEC .

    $default  reduce using rule 65 (unary_opertr)


State 10

    2 commands: commands command .

    $default  reduce using rule 2 (commands)


State 11

    3 command: assignment . SEMICOLON

    SEMICOLON  shift, and go to state 39


State 12

    6 command: print . SEMICOLON

    SEMICOLON  shift, and go to state 40


State 13

    7 command: ret . SEMICOLON

    SEMICOLON  shift, and go to state 41


State 14

    8 command: if .

    $default  reduce using rule 8 (command)


State 15

    9 command: while .

    $default  reduce using rule 9 (command)


State 16

    4 command: unary_opertr . VAR SEMICOLON

    VAR  shift, and go to state 42


State 17

   36 assign_operator: ADD_EQ .

    $default  reduce using rule 36 (assign_operator)


State 18

   37 assign_operator: SUB_EQ .

    $default  reduce using rule 37 (assign_operator)


State 19

   38 assign_operator: MULT_EQ .

    $default  reduce using rule 38 (assign_operator)


State 20

   39 assign_operator: DIV_EQ .

    $default  reduce using rule 39 (assign_operator)


State 21

   40 assign_operator: MOD_EQ .

    $default  reduce using rule 40 (assign_operator)


State 22

   41 assign_operator: PUSHL_EQ .

    $default  reduce using rule 41 (assign_operator)


State 23

   42 assign_operator: PUSHR_EQ .

    $default  reduce using rule 42 (assign_operator)


State 24

   43 assign_operator: XOR_EQ .

    $default  reduce using rule 43 (assign_operator)


State 25

   44 assign_operator: OR_EQ .

    $default  reduce using rule 44 (assign_operator)


State 26

   45 assign_operator: AND_EQ .

    $default  reduce using rule 45 (assign_operator)


State 27

   35 assign_operator: EQUAL .

    $default  reduce using rule 35 (assign_operator)


State 28

   10 assignment: VAR assign_operator . expr

    NUMBER  shift, and go to state 32
    VAR     shift, and go to state 33
    INC     shift, and go to state 34
    DEC     shift, and go to state 35
    '('     shift, and go to state 36

    expr  go to state 43


State 29

    5 command: VAR unary_opertr . SEMICOLON

    SEMICOLON  shift, and go to state 44


State 30

   31 if: IF '(' . expr2 ')' $@2 body $@3 else

    NUMBER  shift, and go to state 32
    VAR     shift, and go to state 33
    INC     shift, and go to state 34
    DEC     shift, and go to state 35
    '('     shift, and go to state 36

    expr2  go to state 45
    expr   go to state 46


State 31

   34 while: WHILE $@4 . '(' expr2 ')' $@5 body

    '('  shift, and go to state 47


State 32

   19 expr: NUMBER .

    $default  reduce using rule 19 (expr)


State 33

   16 expr: VAR . INC
   17     | VAR . DEC
   18     | VAR .

    INC  shift, and go to state 48
    DEC  shift, and go to state 49

    $default  reduce using rule 18 (expr)


State 34

   14 expr: INC . VAR

    VAR  shift, and go to state 50


State 35

   15 expr: DEC . VAR

    VAR  shift, and go to state 51


State 36

   21 expr: '(' . $@1 expr ')'

    $default  reduce using rule 20 ($@1)

    $@1  go to state 52


State 37

   12 expr: expr . bin_opertr expr
   13     | expr . comparison_operator expr
   23 ret: RETURN expr .

    MORE_EQ       shift, and go to state 53
    LESS_EQ       shift, and go to state 54
    NOT_EQUAL     shift, and go to state 55
    EQUAL_DOUBLE  shift, and go to state 56
    PUSHL         shift, and go to state 57
    PUSHR         shift, and go to state 58
    MORE          shift, and go to state 59
    LESS          shift, and go to state 60
    AND           shift, and go to state 61
    OR            shift, and go to state 62
    AND_SINGLE    shift, and go to state 63
    MINUS         shift, and go to state 64
    PLUS          shift, and go to state 65
    MULT          shift, and go to state 66
    DIV           shift, and go to state 67
    MOD           shift, and go to state 68
    XOR           shift, and go to state 69
    OR_SINGLE     shift, and go to state 70

    $default  reduce using rule 23 (ret)

    comparison_operator  go to state 71
    bin_opertr           go to state 72


State 38

   22 print: PRINT '(' . expr ')'

    NUMBER  shift, and go to state 32
    VAR     shift, and go to state 33
    INC     shift, and go to state 34
    DEC     shift, and go to state 35
    '('     shift, and go to state 36

    expr  go to state 73


State 39

    3 command: assignment SEMICOLON .

    $default  reduce using rule 3 (command)


State 40

    6 command: print SEMICOLON .

    $default  reduce using rule 6 (command)


State 41

    7 command: ret SEMICOLON .

    $default  reduce using rule 7 (command)


State 42

    4 command: unary_opertr VAR . SEMICOLON

    SEMICOLON  shift, and go to state 74


State 43

   10 assignment: VAR assign_operator expr .
   12 expr: expr . bin_opertr expr
   13     | expr . comparison_operator expr

    MORE_EQ       shift, and go to state 53
    LESS_EQ       shift, and go to state 54
    NOT_EQUAL     shift, and go to state 55
    EQUAL_DOUBLE  shift, and go to state 56
    PUSHL         shift, and go to state 57
    PUSHR         shift, and go to state 58
    MORE          shift, and go to state 59
    LESS          shift, and go to state 60
    AND           shift, and go to state 61
    OR            shift, and go to state 62
    AND_SINGLE    shift, and go to state 63
    MINUS         shift, and go to state 64
    PLUS          shift, and go to state 65
    MULT          shift, and go to state 66
    DIV           shift, and go to state 67
    MOD           shift, and go to state 68
    XOR           shift, and go to state 69
    OR_SINGLE     shift, and go to state 70

    $default  reduce using rule 10 (assignment)

    comparison_operator  go to state 71
    bin_opertr           go to state 72


State 44

    5 command: VAR unary_opertr SEMICOLON .

    $default  reduce using rule 5 (command)


State 45

   31 if: IF '(' expr2 . ')' $@2 body $@3 else

    ')'  shift, and go to state 75


State 46

   11 expr2: expr .
   12 expr: expr . bin_opertr expr
   13     | expr . comparison_operator expr

    MORE_EQ       shift, and go to state 53
    LESS_EQ       shift, and go to state 54
    NOT_EQUAL     shift, and go to state 55
    EQUAL_DOUBLE  shift, and go to state 56
    PUSHL         shift, and go to state 57
    PUSHR         shift, and go to state 58
    MORE          shift, and go to state 59
    LESS          shift, and go to state 60
    AND           shift, and go to state 61
    OR            shift, and go to state 62
    AND_SINGLE    shift, and go to state 63
    MINUS         shift, and go to state 64
    PLUS          shift, and go to state 65
    MULT          shift, and go to state 66
    DIV           shift, and go to state 67
    MOD           shift, and go to state 68
    XOR           shift, and go to state 69
    OR_SINGLE     shift, and go to state 70

    $default  reduce using rule 11 (expr2)

    comparison_operator  go to state 71
    bin_opertr           go to state 72


State 47

   34 while: WHILE $@4 '(' . expr2 ')' $@5 body

    NUMBER  shift, and go to state 32
    VAR     shift, and go to state 33
    INC     shift, and go to state 34
    DEC     shift, and go to state 35
    '('     shift, and go to state 36

    expr2  go to state 76
    expr   go to state 46


State 48

   16 expr: VAR INC .

    $default  reduce using rule 16 (expr)


State 49

   17 expr: VAR DEC .

    $default  reduce using rule 17 (expr)


State 50

   14 expr: INC VAR .

    $default  reduce using rule 14 (expr)


State 51

   15 expr: DEC VAR .

    $default  reduce using rule 15 (expr)


State 52

   21 expr: '(' $@1 . expr ')'

    NUMBER  shift, and go to state 32
    VAR     shift, and go to state 33
    INC     shift, and go to state 34
    DEC     shift, and go to state 35
    '('     shift, and go to state 36

    expr  go to state 77


State 53

   48 comparison_operator: MORE_EQ .

    $default  reduce using rule 48 (comparison_operator)


State 54

   49 comparison_operator: LESS_EQ .

    $default  reduce using rule 49 (comparison_operator)


State 55

   47 comparison_operator: NOT_EQUAL .

    $default  reduce using rule 47 (comparison_operator)


State 56

   46 comparison_operator: EQUAL_DOUBLE .

    $default  reduce using rule 46 (comparison_operator)


State 57

   62 bin_opertr: PUSHL .

    $default  reduce using rule 62 (bin_opertr)


State 58

   63 bin_opertr: PUSHR .

    $default  reduce using rule 63 (bin_opertr)


State 59

   51 comparison_operator: MORE .

    $default  reduce using rule 51 (comparison_operator)


State 60

   50 comparison_operator: LESS .

    $default  reduce using rule 50 (comparison_operator)


State 61

   52 comparison_operator: AND .

    $default  reduce using rule 52 (comparison_operator)


State 62

   53 comparison_operator: OR .

    $default  reduce using rule 53 (comparison_operator)


State 63

   61 bin_opertr: AND_SINGLE .

    $default  reduce using rule 61 (bin_opertr)


State 64

   54 bin_opertr: MINUS .

    $default  reduce using rule 54 (bin_opertr)


State 65

   55 bin_opertr: PLUS .

    $default  reduce using rule 55 (bin_opertr)


State 66

   56 bin_opertr: MULT .

    $default  reduce using rule 56 (bin_opertr)


State 67

   57 bin_opertr: DIV .

    $default  reduce using rule 57 (bin_opertr)


State 68

   58 bin_opertr: MOD .

    $default  reduce using rule 58 (bin_opertr)


State 69

   59 bin_opertr: XOR .

    $default  reduce using rule 59 (bin_opertr)


State 70

   60 bin_opertr: OR_SINGLE .

    $default  reduce using rule 60 (bin_opertr)


State 71

   13 expr: expr comparison_operator . expr

    NUMBER  shift, and go to state 32
    VAR     shift, and go to state 33
    INC     shift, and go to state 34
    DEC     shift, and go to state 35
    '('     shift, and go to state 36

    expr  go to state 78


State 72

   12 expr: expr bin_opertr . expr

    NUMBER  shift, and go to state 32
    VAR     shift, and go to state 33
    INC     shift, and go to state 34
    DEC     shift, and go to state 35
    '('     shift, and go to state 36

    expr  go to state 79


State 73

   12 expr: expr . bin_opertr expr
   13     | expr . comparison_operator expr
   22 print: PRINT '(' expr . ')'

    MORE_EQ       shift, and go to state 53
    LESS_EQ       shift, and go to state 54
    NOT_EQUAL     shift, and go to state 55
    EQUAL_DOUBLE  shift, and go to state 56
    PUSHL         shift, and go to state 57
    PUSHR         shift, and go to state 58
    MORE          shift, and go to state 59
    LESS          shift, and go to state 60
    AND           shift, and go to state 61
    OR            shift, and go to state 62
    AND_SINGLE    shift, and go to state 63
    MINUS         shift, and go to state 64
    PLUS          shift, and go to state 65
    MULT          shift, and go to state 66
    DIV           shift, and go to state 67
    MOD           shift, and go to state 68
    XOR           shift, and go to state 69
    OR_SINGLE     shift, and go to state 70
    ')'           shift, and go to state 80

    comparison_operator  go to state 71
    bin_opertr           go to state 72


State 74

    4 command: unary_opertr VAR SEMICOLON .

    $default  reduce using rule 4 (command)


State 75

   31 if: IF '(' expr2 ')' . $@2 body $@3 else

    $default  reduce using rule 29 ($@2)

    $@2  go to state 81


State 76

   34 while: WHILE $@4 '(' expr2 . ')' $@5 body

    ')'  shift, and go to state 82


State 77

   12 expr: expr . bin_opertr expr
   13     | expr . comparison_operator expr
   21     | '(' $@1 expr . ')'

    MORE_EQ       shift, and go to state 53
    LESS_EQ       shift, and go to state 54
    NOT_EQUAL     shift, and go to state 55
    EQUAL_DOUBLE  shift, and go to state 56
    PUSHL         shift, and go to state 57
    PUSHR         shift, and go to state 58
    MORE          shift, and go to state 59
    LESS          shift, and go to state 60
    AND           shift, and go to state 61
    OR            shift, and go to state 62
    AND_SINGLE    shift, and go to state 63
    MINUS         shift, and go to state 64
    PLUS          shift, and go to state 65
    MULT          shift, and go to state 66
    DIV           shift, and go to state 67
    MOD           shift, and go to state 68
    XOR           shift, and go to state 69
    OR_SINGLE     shift, and go to state 70
    ')'           shift, and go to state 83

    comparison_operator  go to state 71
    bin_opertr           go to state 72


State 78

   12 expr: expr . bin_opertr expr
   13     | expr . comparison_operator expr
   13     | expr comparison_operator expr .

    MORE_EQ       shift, and go to state 53
    LESS_EQ       shift, and go to state 54
    NOT_EQUAL     shift, and go to state 55
    EQUAL_DOUBLE  shift, and go to state 56
    PUSHL         shift, and go to state 57
    PUSHR         shift, and go to state 58
    MORE          shift, and go to state 59
    LESS          shift, and go to state 60
    AND           shift, and go to state 61
    OR            shift, and go to state 62
    AND_SINGLE    shift, and go to state 63
    MINUS         shift, and go to state 64
    PLUS          shift, and go to state 65
    MULT          shift, and go to state 66
    DIV           shift, and go to state 67
    MOD           shift, and go to state 68
    XOR           shift, and go to state 69
    OR_SINGLE     shift, and go to state 70

    MORE_EQ       [reduce using rule 13 (expr)]
    LESS_EQ       [reduce using rule 13 (expr)]
    NOT_EQUAL     [reduce using rule 13 (expr)]
    EQUAL_DOUBLE  [reduce using rule 13 (expr)]
    PUSHL         [reduce using rule 13 (expr)]
    PUSHR         [reduce using rule 13 (expr)]
    MORE          [reduce using rule 13 (expr)]
    LESS          [reduce using rule 13 (expr)]
    AND           [reduce using rule 13 (expr)]
    OR            [reduce using rule 13 (expr)]
    AND_SINGLE    [reduce using rule 13 (expr)]
    MINUS         [reduce using rule 13 (expr)]
    PLUS          [reduce using rule 13 (expr)]
    MULT          [reduce using rule 13 (expr)]
    DIV           [reduce using rule 13 (expr)]
    MOD           [reduce using rule 13 (expr)]
    XOR           [reduce using rule 13 (expr)]
    OR_SINGLE     [reduce using rule 13 (expr)]
    $default      reduce using rule 13 (expr)

    comparison_operator  go to state 71
    bin_opertr           go to state 72


State 79

   12 expr: expr . bin_opertr expr
   12     | expr bin_opertr expr .
   13     | expr . comparison_operator expr

    MORE_EQ       shift, and go to state 53
    LESS_EQ       shift, and go to state 54
    NOT_EQUAL     shift, and go to state 55
    EQUAL_DOUBLE  shift, and go to state 56
    PUSHL         shift, and go to state 57
    PUSHR         shift, and go to state 58
    MORE          shift, and go to state 59
    LESS          shift, and go to state 60
    AND           shift, and go to state 61
    OR            shift, and go to state 62
    AND_SINGLE    shift, and go to state 63
    MINUS         shift, and go to state 64
    PLUS          shift, and go to state 65
    MULT          shift, and go to state 66
    DIV           shift, and go to state 67
    MOD           shift, and go to state 68
    XOR           shift, and go to state 69
    OR_SINGLE     shift, and go to state 70

    MORE_EQ       [reduce using rule 12 (expr)]
    LESS_EQ       [reduce using rule 12 (expr)]
    NOT_EQUAL     [reduce using rule 12 (expr)]
    EQUAL_DOUBLE  [reduce using rule 12 (expr)]
    PUSHL         [reduce using rule 12 (expr)]
    PUSHR         [reduce using rule 12 (expr)]
    MORE          [reduce using rule 12 (expr)]
    LESS          [reduce using rule 12 (expr)]
    AND           [reduce using rule 12 (expr)]
    OR            [reduce using rule 12 (expr)]
    AND_SINGLE    [reduce using rule 12 (expr)]
    MINUS         [reduce using rule 12 (expr)]
    PLUS          [reduce using rule 12 (expr)]
    MULT          [reduce using rule 12 (expr)]
    DIV           [reduce using rule 12 (expr)]
    MOD           [reduce using rule 12 (expr)]
    XOR           [reduce using rule 12 (expr)]
    OR_SINGLE     [reduce using rule 12 (expr)]
    $default      reduce using rule 12 (expr)

    comparison_operator  go to state 71
    bin_opertr           go to state 72


State 80

   22 print: PRINT '(' expr ')' .

    $default  reduce using rule 22 (print)


State 81

   31 if: IF '(' expr2 ')' $@2 . body $@3 else

    VAR     shift, and go to state 3
    IF      shift, and go to state 4
    WHILE   shift, and go to state 5
    RETURN  shift, and go to state 6
    PRINT   shift, and go to state 7
    INC     shift, and go to state 8
    DEC     shift, and go to state 9
    '{'     shift, and go to state 84

    command       go to state 85
    assignment    go to state 11
    print         go to state 12
    ret           go to state 13
    body          go to state 86
    if            go to state 14
    while         go to state 15
    unary_opertr  go to state 16


State 82

   34 while: WHILE $@4 '(' expr2 ')' . $@5 body

    $default  reduce using rule 33 ($@5)

    $@5  go to state 87


State 83

   21 expr: '(' $@1 expr ')' .

    $default  reduce using rule 21 (expr)


State 84

   25 body: '{' . commands '}'

    $default  reduce using rule 1 (commands)

    commands  go to state 88


State 85

   26 body: command .

    $default  reduce using rule 26 (body)


State 86

   31 if: IF '(' expr2 ')' $@2 body . $@3 else

    $default  reduce using rule 30 ($@3)

    $@3  go to state 89


State 87

   34 while: WHILE $@4 '(' expr2 ')' $@5 . body

    VAR     shift, and go to state 3
    IF      shift, and go to state 4
    WHILE   shift, and go to state 5
    RETURN  shift, and go to state 6
    PRINT   shift, and go to state 7
    INC     shift, and go to state 8
    DEC     shift, and go to state 9
    '{'     shift, and go to state 84

    command       go to state 85
    assignment    go to state 11
    print         go to state 12
    ret           go to state 13
    body          go to state 90
    if            go to state 14
    while         go to state 15
    unary_opertr  go to state 16


State 88

    2 commands: commands . command
   25 body: '{' commands . '}'

    VAR     shift, and go to state 3
    IF      shift, and go to state 4
    WHILE   shift, and go to state 5
    RETURN  shift, and go to state 6
    PRINT   shift, and go to state 7
    INC     shift, and go to state 8
    DEC     shift, and go to state 9
    '}'     shift, and go to state 91

    command       go to state 10
    assignment    go to state 11
    print         go to state 12
    ret           go to state 13
    if            go to state 14
    while         go to state 15
    unary_opertr  go to state 16


State 89

   31 if: IF '(' expr2 ')' $@2 body $@3 . else

    ELSE  shift, and go to state 92

    ELSE      [reduce using rule 27 (else)]
    $default  reduce using rule 27 (else)

    else  go to state 93


State 90

   34 while: WHILE $@4 '(' expr2 ')' $@5 body .

    $default  reduce using rule 34 (while)


State 91

   25 body: '{' commands '}' .

    $default  reduce using rule 25 (body)


State 92

   28 else: ELSE . body

    VAR     shift, and go to state 3
    IF      shift, and go to state 4
    WHILE   shift, and go to state 5
    RETURN  shift, and go to state 6
    PRINT   shift, and go to state 7
    INC     shift, and go to state 8
    DEC     shift, and go to state 9
    '{'     shift, and go to state 84

    command       go to state 85
    assignment    go to state 11
    print         go to state 12
    ret           go to state 13
    body          go to state 94
    if            go to state 14
    while         go to state 15
    unary_opertr  go to state 16


State 93

   31 if: IF '(' expr2 ')' $@2 body $@3 else .

    $default  reduce using rule 31 (if)


State 94

   28 else: ELSE body .

    $default  reduce using rule 28 (else)
