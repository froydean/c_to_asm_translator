State 82 conflicts: 18 shift/reduce
State 83 conflicts: 18 shift/reduce
State 94 conflicts: 1 shift/reduce


Grammar

    0 $accept: commands $end

    1 commands: %empty
    2         | commands command

    3 command: assignment SEMICOLON
    4        | unary_opertr VAR SEMICOLON
    5        | VAR unary_opertr SEMICOLON
    6        | print SEMICOLON
    7        | ret SEMICOLON
    8        | if
    9        | while

   10 assignment: VAR assign_operator expr

   11 expr2: expr

   12 expr: expr bin_opertr expr
   13     | expr comparison_operator expr
   14     | INC VAR
   15     | DEC VAR
   16     | VAR INC
   17     | VAR DEC
   18     | VAR
   19     | NUMBER

   20 $@1: %empty

   21 expr: '(' $@1 expr ')'
   22     | NOT '(' expr ')'
   23     | NOT VAR

   24 print: PRINT '(' expr ')'

   25 ret: RETURN expr
   26    | RETURN

   27 body: '{' commands '}'
   28     | command

   29 else: %empty
   30     | ELSE body

   31 $@2: %empty

   32 $@3: %empty

   33 if: IF '(' expr2 ')' $@2 body $@3 else

   34 $@4: %empty

   35 $@5: %empty

   36 while: WHILE $@4 '(' expr2 ')' $@5 body

   37 assign_operator: EQUAL
   38                | ADD_EQ
   39                | SUB_EQ
   40                | MULT_EQ
   41                | DIV_EQ
   42                | MOD_EQ
   43                | PUSHL_EQ
   44                | PUSHR_EQ
   45                | XOR_EQ
   46                | OR_EQ
   47                | AND_EQ

   48 comparison_operator: EQUAL_DOUBLE
   49                    | NOT_EQUAL
   50                    | MORE_EQ
   51                    | LESS_EQ
   52                    | LESS
   53                    | MORE
   54                    | AND
   55                    | OR

   56 bin_opertr: MINUS
   57           | PLUS
   58           | MULT
   59           | DIV
   60           | MOD
   61           | XOR
   62           | OR_SINGLE
   63           | AND_SINGLE
   64           | PUSHL
   65           | PUSHR

   66 unary_opertr: INC
   67             | DEC


Terminals, with rules where they appear

    $end (0) 0
    '(' (40) 21 22 24 33 36
    ')' (41) 21 22 24 33 36
    '{' (123) 27
    '}' (125) 27
    error (256)
    NUMBER <string> (258) 19
    VAR <string> (259) 4 5 10 14 15 16 17 18 23
    IF (260) 33
    ELSE (261) 30
    WHILE (262) 36
    RETURN (263) 25 26
    PRINT (264) 24
    ADD_EQ (265) 38
    SUB_EQ (266) 39
    MULT_EQ (267) 40
    DIV_EQ (268) 41
    MOD_EQ (269) 42
    MORE_EQ (270) 50
    LESS_EQ (271) 51
    NOT_EQUAL (272) 49
    EQUAL_DOUBLE (273) 48
    PUSHL_EQ (274) 43
    PUSHR_EQ (275) 44
    PUSHL (276) 64
    PUSHR (277) 65
    MORE (278) 53
    LESS (279) 52
    XOR_EQ (280) 45
    OR_EQ (281) 46
    AND_EQ (282) 47
    AND (283) 54
    OR (284) 55
    AND_SINGLE (285) 63
    MINUS (286) 56
    SEMICOLON (287) 3 4 5 6 7
    EQUAL (288) 37
    PLUS (289) 57
    MULT (290) 58
    DIV (291) 59
    NOT (292) 22 23
    MOD (293) 60
    XOR (294) 61
    OR_SINGLE (295) 62
    INC (296) 14 16 66
    DEC (297) 15 17 67


Nonterminals, with rules where they appear

    $accept (47)
        on left: 0
    commands (48)
        on left: 1 2
        on right: 0 2 27
    command (49)
        on left: 3 4 5 6 7 8 9
        on right: 2 28
    assignment (50)
        on left: 10
        on right: 3
    expr2 (51)
        on left: 11
        on right: 33 36
    expr (52)
        on left: 12 13 14 15 16 17 18 19 21 22 23
        on right: 10 11 12 13 21 22 24 25
    $@1 (53)
        on left: 20
        on right: 21
    print (54)
        on left: 24
        on right: 6
    ret (55)
        on left: 25 26
        on right: 7
    body (56)
        on left: 27 28
        on right: 30 33 36
    else (57)
        on left: 29 30
        on right: 33
    if (58)
        on left: 33
        on right: 8
    $@2 (59)
        on left: 31
        on right: 33
    $@3 (60)
        on left: 32
        on right: 33
    while (61)
        on left: 36
        on right: 9
    $@4 (62)
        on left: 34
        on right: 36
    $@5 (63)
        on left: 35
        on right: 36
    assign_operator (64)
        on left: 37 38 39 40 41 42 43 44 45 46 47
        on right: 10
    comparison_operator (65)
        on left: 48 49 50 51 52 53 54 55
        on right: 13
    bin_opertr (66)
        on left: 56 57 58 59 60 61 62 63 64 65
        on right: 12
    unary_opertr (67)
        on left: 66 67
        on right: 4 5


State 0

    0 $accept: . commands $end

    $default  reduce using rule 1 (commands)

    commands  go to state 1


State 1

    0 $accept: commands . $end
    2 commands: commands . command

    $end    shift, and go to state 2
    VAR     shift, and go to state 3
    IF      shift, and go to state 4
    WHILE   shift, and go to state 5
    RETURN  shift, and go to state 6
    PRINT   shift, and go to state 7
    INC     shift, and go to state 8
    DEC     shift, and go to state 9

    command       go to state 10
    assignment    go to state 11
    print         go to state 12
    ret           go to state 13
    if            go to state 14
    while         go to state 15
    unary_opertr  go to state 16


State 2

    0 $accept: commands $end .

    $default  accept


State 3

    5 command: VAR . unary_opertr SEMICOLON
   10 assignment: VAR . assign_operator expr

    ADD_EQ    shift, and go to state 17
    SUB_EQ    shift, and go to state 18
    MULT_EQ   shift, and go to state 19
    DIV_EQ    shift, and go to state 20
    MOD_EQ    shift, and go to state 21
    PUSHL_EQ  shift, and go to state 22
    PUSHR_EQ  shift, and go to state 23
    XOR_EQ    shift, and go to state 24
    OR_EQ     shift, and go to state 25
    AND_EQ    shift, and go to state 26
    EQUAL     shift, and go to state 27
    INC       shift, and go to state 8
    DEC       shift, and go to state 9

    assign_operator  go to state 28
    unary_opertr     go to state 29


State 4

   33 if: IF . '(' expr2 ')' $@2 body $@3 else

    '('  shift, and go to state 30


State 5

   36 while: WHILE . $@4 '(' expr2 ')' $@5 body

    $default  reduce using rule 34 ($@4)

    $@4  go to state 31


State 6

   25 ret: RETURN . expr
   26    | RETURN .

    NUMBER  shift, and go to state 32
    VAR     shift, and go to state 33
    NOT     shift, and go to state 34
    INC     shift, and go to state 35
    DEC     shift, and go to state 36
    '('     shift, and go to state 37

    $default  reduce using rule 26 (ret)

    expr  go to state 38


State 7

   24 print: PRINT . '(' expr ')'

    '('  shift, and go to state 39


State 8

   66 unary_opertr: INC .

    $default  reduce using rule 66 (unary_opertr)


State 9

   67 unary_opertr: DEC .

    $default  reduce using rule 67 (unary_opertr)


State 10

    2 commands: commands command .

    $default  reduce using rule 2 (commands)


State 11

    3 command: assignment . SEMICOLON

    SEMICOLON  shift, and go to state 40


State 12

    6 command: print . SEMICOLON

    SEMICOLON  shift, and go to state 41


State 13

    7 command: ret . SEMICOLON

    SEMICOLON  shift, and go to state 42


State 14

    8 command: if .

    $default  reduce using rule 8 (command)


State 15

    9 command: while .

    $default  reduce using rule 9 (command)


State 16

    4 command: unary_opertr . VAR SEMICOLON

    VAR  shift, and go to state 43


State 17

   38 assign_operator: ADD_EQ .

    $default  reduce using rule 38 (assign_operator)


State 18

   39 assign_operator: SUB_EQ .

    $default  reduce using rule 39 (assign_operator)


State 19

   40 assign_operator: MULT_EQ .

    $default  reduce using rule 40 (assign_operator)


State 20

   41 assign_operator: DIV_EQ .

    $default  reduce using rule 41 (assign_operator)


State 21

   42 assign_operator: MOD_EQ .

    $default  reduce using rule 42 (assign_operator)


State 22

   43 assign_operator: PUSHL_EQ .

    $default  reduce using rule 43 (assign_operator)


State 23

   44 assign_operator: PUSHR_EQ .

    $default  reduce using rule 44 (assign_operator)


State 24

   45 assign_operator: XOR_EQ .

    $default  reduce using rule 45 (assign_operator)


State 25

   46 assign_operator: OR_EQ .

    $default  reduce using rule 46 (assign_operator)


State 26

   47 assign_operator: AND_EQ .

    $default  reduce using rule 47 (assign_operator)


State 27

   37 assign_operator: EQUAL .

    $default  reduce using rule 37 (assign_operator)


State 28

   10 assignment: VAR assign_operator . expr

    NUMBER  shift, and go to state 32
    VAR     shift, and go to state 33
    NOT     shift, and go to state 34
    INC     shift, and go to state 35
    DEC     shift, and go to state 36
    '('     shift, and go to state 37

    expr  go to state 44


State 29

    5 command: VAR unary_opertr . SEMICOLON

    SEMICOLON  shift, and go to state 45


State 30

   33 if: IF '(' . expr2 ')' $@2 body $@3 else

    NUMBER  shift, and go to state 32
    VAR     shift, and go to state 33
    NOT     shift, and go to state 34
    INC     shift, and go to state 35
    DEC     shift, and go to state 36
    '('     shift, and go to state 37

    expr2  go to state 46
    expr   go to state 47


State 31

   36 while: WHILE $@4 . '(' expr2 ')' $@5 body

    '('  shift, and go to state 48


State 32

   19 expr: NUMBER .

    $default  reduce using rule 19 (expr)


State 33

   16 expr: VAR . INC
   17     | VAR . DEC
   18     | VAR .

    INC  shift, and go to state 49
    DEC  shift, and go to state 50

    $default  reduce using rule 18 (expr)


State 34

   22 expr: NOT . '(' expr ')'
   23     | NOT . VAR

    VAR  shift, and go to state 51
    '('  shift, and go to state 52


State 35

   14 expr: INC . VAR

    VAR  shift, and go to state 53


State 36

   15 expr: DEC . VAR

    VAR  shift, and go to state 54


State 37

   21 expr: '(' . $@1 expr ')'

    $default  reduce using rule 20 ($@1)

    $@1  go to state 55


State 38

   12 expr: expr . bin_opertr expr
   13     | expr . comparison_operator expr
   25 ret: RETURN expr .

    MORE_EQ       shift, and go to state 56
    LESS_EQ       shift, and go to state 57
    NOT_EQUAL     shift, and go to state 58
    EQUAL_DOUBLE  shift, and go to state 59
    PUSHL         shift, and go to state 60
    PUSHR         shift, and go to state 61
    MORE          shift, and go to state 62
    LESS          shift, and go to state 63
    AND           shift, and go to state 64
    OR            shift, and go to state 65
    AND_SINGLE    shift, and go to state 66
    MINUS         shift, and go to state 67
    PLUS          shift, and go to state 68
    MULT          shift, and go to state 69
    DIV           shift, and go to state 70
    MOD           shift, and go to state 71
    XOR           shift, and go to state 72
    OR_SINGLE     shift, and go to state 73

    $default  reduce using rule 25 (ret)

    comparison_operator  go to state 74
    bin_opertr           go to state 75


State 39

   24 print: PRINT '(' . expr ')'

    NUMBER  shift, and go to state 32
    VAR     shift, and go to state 33
    NOT     shift, and go to state 34
    INC     shift, and go to state 35
    DEC     shift, and go to state 36
    '('     shift, and go to state 37

    expr  go to state 76


State 40

    3 command: assignment SEMICOLON .

    $default  reduce using rule 3 (command)


State 41

    6 command: print SEMICOLON .

    $default  reduce using rule 6 (command)


State 42

    7 command: ret SEMICOLON .

    $default  reduce using rule 7 (command)


State 43

    4 command: unary_opertr VAR . SEMICOLON

    SEMICOLON  shift, and go to state 77


State 44

   10 assignment: VAR assign_operator expr .
   12 expr: expr . bin_opertr expr
   13     | expr . comparison_operator expr

    MORE_EQ       shift, and go to state 56
    LESS_EQ       shift, and go to state 57
    NOT_EQUAL     shift, and go to state 58
    EQUAL_DOUBLE  shift, and go to state 59
    PUSHL         shift, and go to state 60
    PUSHR         shift, and go to state 61
    MORE          shift, and go to state 62
    LESS          shift, and go to state 63
    AND           shift, and go to state 64
    OR            shift, and go to state 65
    AND_SINGLE    shift, and go to state 66
    MINUS         shift, and go to state 67
    PLUS          shift, and go to state 68
    MULT          shift, and go to state 69
    DIV           shift, and go to state 70
    MOD           shift, and go to state 71
    XOR           shift, and go to state 72
    OR_SINGLE     shift, and go to state 73

    $default  reduce using rule 10 (assignment)

    comparison_operator  go to state 74
    bin_opertr           go to state 75


State 45

    5 command: VAR unary_opertr SEMICOLON .

    $default  reduce using rule 5 (command)


State 46

   33 if: IF '(' expr2 . ')' $@2 body $@3 else

    ')'  shift, and go to state 78


State 47

   11 expr2: expr .
   12 expr: expr . bin_opertr expr
   13     | expr . comparison_operator expr

    MORE_EQ       shift, and go to state 56
    LESS_EQ       shift, and go to state 57
    NOT_EQUAL     shift, and go to state 58
    EQUAL_DOUBLE  shift, and go to state 59
    PUSHL         shift, and go to state 60
    PUSHR         shift, and go to state 61
    MORE          shift, and go to state 62
    LESS          shift, and go to state 63
    AND           shift, and go to state 64
    OR            shift, and go to state 65
    AND_SINGLE    shift, and go to state 66
    MINUS         shift, and go to state 67
    PLUS          shift, and go to state 68
    MULT          shift, and go to state 69
    DIV           shift, and go to state 70
    MOD           shift, and go to state 71
    XOR           shift, and go to state 72
    OR_SINGLE     shift, and go to state 73

    $default  reduce using rule 11 (expr2)

    comparison_operator  go to state 74
    bin_opertr           go to state 75


State 48

   36 while: WHILE $@4 '(' . expr2 ')' $@5 body

    NUMBER  shift, and go to state 32
    VAR     shift, and go to state 33
    NOT     shift, and go to state 34
    INC     shift, and go to state 35
    DEC     shift, and go to state 36
    '('     shift, and go to state 37

    expr2  go to state 79
    expr   go to state 47


State 49

   16 expr: VAR INC .

    $default  reduce using rule 16 (expr)


State 50

   17 expr: VAR DEC .

    $default  reduce using rule 17 (expr)


State 51

   23 expr: NOT VAR .

    $default  reduce using rule 23 (expr)


State 52

   22 expr: NOT '(' . expr ')'

    NUMBER  shift, and go to state 32
    VAR     shift, and go to state 33
    NOT     shift, and go to state 34
    INC     shift, and go to state 35
    DEC     shift, and go to state 36
    '('     shift, and go to state 37

    expr  go to state 80


State 53

   14 expr: INC VAR .

    $default  reduce using rule 14 (expr)


State 54

   15 expr: DEC VAR .

    $default  reduce using rule 15 (expr)


State 55

   21 expr: '(' $@1 . expr ')'

    NUMBER  shift, and go to state 32
    VAR     shift, and go to state 33
    NOT     shift, and go to state 34
    INC     shift, and go to state 35
    DEC     shift, and go to state 36
    '('     shift, and go to state 37

    expr  go to state 81


State 56

   50 comparison_operator: MORE_EQ .

    $default  reduce using rule 50 (comparison_operator)


State 57

   51 comparison_operator: LESS_EQ .

    $default  reduce using rule 51 (comparison_operator)


State 58

   49 comparison_operator: NOT_EQUAL .

    $default  reduce using rule 49 (comparison_operator)


State 59

   48 comparison_operator: EQUAL_DOUBLE .

    $default  reduce using rule 48 (comparison_operator)


State 60

   64 bin_opertr: PUSHL .

    $default  reduce using rule 64 (bin_opertr)


State 61

   65 bin_opertr: PUSHR .

    $default  reduce using rule 65 (bin_opertr)


State 62

   53 comparison_operator: MORE .

    $default  reduce using rule 53 (comparison_operator)


State 63

   52 comparison_operator: LESS .

    $default  reduce using rule 52 (comparison_operator)


State 64

   54 comparison_operator: AND .

    $default  reduce using rule 54 (comparison_operator)


State 65

   55 comparison_operator: OR .

    $default  reduce using rule 55 (comparison_operator)


State 66

   63 bin_opertr: AND_SINGLE .

    $default  reduce using rule 63 (bin_opertr)


State 67

   56 bin_opertr: MINUS .

    $default  reduce using rule 56 (bin_opertr)


State 68

   57 bin_opertr: PLUS .

    $default  reduce using rule 57 (bin_opertr)


State 69

   58 bin_opertr: MULT .

    $default  reduce using rule 58 (bin_opertr)


State 70

   59 bin_opertr: DIV .

    $default  reduce using rule 59 (bin_opertr)


State 71

   60 bin_opertr: MOD .

    $default  reduce using rule 60 (bin_opertr)


State 72

   61 bin_opertr: XOR .

    $default  reduce using rule 61 (bin_opertr)


State 73

   62 bin_opertr: OR_SINGLE .

    $default  reduce using rule 62 (bin_opertr)


State 74

   13 expr: expr comparison_operator . expr

    NUMBER  shift, and go to state 32
    VAR     shift, and go to state 33
    NOT     shift, and go to state 34
    INC     shift, and go to state 35
    DEC     shift, and go to state 36
    '('     shift, and go to state 37

    expr  go to state 82


State 75

   12 expr: expr bin_opertr . expr

    NUMBER  shift, and go to state 32
    VAR     shift, and go to state 33
    NOT     shift, and go to state 34
    INC     shift, and go to state 35
    DEC     shift, and go to state 36
    '('     shift, and go to state 37

    expr  go to state 83


State 76

   12 expr: expr . bin_opertr expr
   13     | expr . comparison_operator expr
   24 print: PRINT '(' expr . ')'

    MORE_EQ       shift, and go to state 56
    LESS_EQ       shift, and go to state 57
    NOT_EQUAL     shift, and go to state 58
    EQUAL_DOUBLE  shift, and go to state 59
    PUSHL         shift, and go to state 60
    PUSHR         shift, and go to state 61
    MORE          shift, and go to state 62
    LESS          shift, and go to state 63
    AND           shift, and go to state 64
    OR            shift, and go to state 65
    AND_SINGLE    shift, and go to state 66
    MINUS         shift, and go to state 67
    PLUS          shift, and go to state 68
    MULT          shift, and go to state 69
    DIV           shift, and go to state 70
    MOD           shift, and go to state 71
    XOR           shift, and go to state 72
    OR_SINGLE     shift, and go to state 73
    ')'           shift, and go to state 84

    comparison_operator  go to state 74
    bin_opertr           go to state 75


State 77

    4 command: unary_opertr VAR SEMICOLON .

    $default  reduce using rule 4 (command)


State 78

   33 if: IF '(' expr2 ')' . $@2 body $@3 else

    $default  reduce using rule 31 ($@2)

    $@2  go to state 85


State 79

   36 while: WHILE $@4 '(' expr2 . ')' $@5 body

    ')'  shift, and go to state 86


State 80

   12 expr: expr . bin_opertr expr
   13     | expr . comparison_operator expr
   22     | NOT '(' expr . ')'

    MORE_EQ       shift, and go to state 56
    LESS_EQ       shift, and go to state 57
    NOT_EQUAL     shift, and go to state 58
    EQUAL_DOUBLE  shift, and go to state 59
    PUSHL         shift, and go to state 60
    PUSHR         shift, and go to state 61
    MORE          shift, and go to state 62
    LESS          shift, and go to state 63
    AND           shift, and go to state 64
    OR            shift, and go to state 65
    AND_SINGLE    shift, and go to state 66
    MINUS         shift, and go to state 67
    PLUS          shift, and go to state 68
    MULT          shift, and go to state 69
    DIV           shift, and go to state 70
    MOD           shift, and go to state 71
    XOR           shift, and go to state 72
    OR_SINGLE     shift, and go to state 73
    ')'           shift, and go to state 87

    comparison_operator  go to state 74
    bin_opertr           go to state 75


State 81

   12 expr: expr . bin_opertr expr
   13     | expr . comparison_operator expr
   21     | '(' $@1 expr . ')'

    MORE_EQ       shift, and go to state 56
    LESS_EQ       shift, and go to state 57
    NOT_EQUAL     shift, and go to state 58
    EQUAL_DOUBLE  shift, and go to state 59
    PUSHL         shift, and go to state 60
    PUSHR         shift, and go to state 61
    MORE          shift, and go to state 62
    LESS          shift, and go to state 63
    AND           shift, and go to state 64
    OR            shift, and go to state 65
    AND_SINGLE    shift, and go to state 66
    MINUS         shift, and go to state 67
    PLUS          shift, and go to state 68
    MULT          shift, and go to state 69
    DIV           shift, and go to state 70
    MOD           shift, and go to state 71
    XOR           shift, and go to state 72
    OR_SINGLE     shift, and go to state 73
    ')'           shift, and go to state 88

    comparison_operator  go to state 74
    bin_opertr           go to state 75


State 82

   12 expr: expr . bin_opertr expr
   13     | expr . comparison_operator expr
   13     | expr comparison_operator expr .

    MORE_EQ       shift, and go to state 56
    LESS_EQ       shift, and go to state 57
    NOT_EQUAL     shift, and go to state 58
    EQUAL_DOUBLE  shift, and go to state 59
    PUSHL         shift, and go to state 60
    PUSHR         shift, and go to state 61
    MORE          shift, and go to state 62
    LESS          shift, and go to state 63
    AND           shift, and go to state 64
    OR            shift, and go to state 65
    AND_SINGLE    shift, and go to state 66
    MINUS         shift, and go to state 67
    PLUS          shift, and go to state 68
    MULT          shift, and go to state 69
    DIV           shift, and go to state 70
    MOD           shift, and go to state 71
    XOR           shift, and go to state 72
    OR_SINGLE     shift, and go to state 73

    MORE_EQ       [reduce using rule 13 (expr)]
    LESS_EQ       [reduce using rule 13 (expr)]
    NOT_EQUAL     [reduce using rule 13 (expr)]
    EQUAL_DOUBLE  [reduce using rule 13 (expr)]
    PUSHL         [reduce using rule 13 (expr)]
    PUSHR         [reduce using rule 13 (expr)]
    MORE          [reduce using rule 13 (expr)]
    LESS          [reduce using rule 13 (expr)]
    AND           [reduce using rule 13 (expr)]
    OR            [reduce using rule 13 (expr)]
    AND_SINGLE    [reduce using rule 13 (expr)]
    MINUS         [reduce using rule 13 (expr)]
    PLUS          [reduce using rule 13 (expr)]
    MULT          [reduce using rule 13 (expr)]
    DIV           [reduce using rule 13 (expr)]
    MOD           [reduce using rule 13 (expr)]
    XOR           [reduce using rule 13 (expr)]
    OR_SINGLE     [reduce using rule 13 (expr)]
    $default      reduce using rule 13 (expr)

    comparison_operator  go to state 74
    bin_opertr           go to state 75


State 83

   12 expr: expr . bin_opertr expr
   12     | expr bin_opertr expr .
   13     | expr . comparison_operator expr

    MORE_EQ       shift, and go to state 56
    LESS_EQ       shift, and go to state 57
    NOT_EQUAL     shift, and go to state 58
    EQUAL_DOUBLE  shift, and go to state 59
    PUSHL         shift, and go to state 60
    PUSHR         shift, and go to state 61
    MORE          shift, and go to state 62
    LESS          shift, and go to state 63
    AND           shift, and go to state 64
    OR            shift, and go to state 65
    AND_SINGLE    shift, and go to state 66
    MINUS         shift, and go to state 67
    PLUS          shift, and go to state 68
    MULT          shift, and go to state 69
    DIV           shift, and go to state 70
    MOD           shift, and go to state 71
    XOR           shift, and go to state 72
    OR_SINGLE     shift, and go to state 73

    MORE_EQ       [reduce using rule 12 (expr)]
    LESS_EQ       [reduce using rule 12 (expr)]
    NOT_EQUAL     [reduce using rule 12 (expr)]
    EQUAL_DOUBLE  [reduce using rule 12 (expr)]
    PUSHL         [reduce using rule 12 (expr)]
    PUSHR         [reduce using rule 12 (expr)]
    MORE          [reduce using rule 12 (expr)]
    LESS          [reduce using rule 12 (expr)]
    AND           [reduce using rule 12 (expr)]
    OR            [reduce using rule 12 (expr)]
    AND_SINGLE    [reduce using rule 12 (expr)]
    MINUS         [reduce using rule 12 (expr)]
    PLUS          [reduce using rule 12 (expr)]
    MULT          [reduce using rule 12 (expr)]
    DIV           [reduce using rule 12 (expr)]
    MOD           [reduce using rule 12 (expr)]
    XOR           [reduce using rule 12 (expr)]
    OR_SINGLE     [reduce using rule 12 (expr)]
    $default      reduce using rule 12 (expr)

    comparison_operator  go to state 74
    bin_opertr           go to state 75


State 84

   24 print: PRINT '(' expr ')' .

    $default  reduce using rule 24 (print)


State 85

   33 if: IF '(' expr2 ')' $@2 . body $@3 else

    VAR     shift, and go to state 3
    IF      shift, and go to state 4
    WHILE   shift, and go to state 5
    RETURN  shift, and go to state 6
    PRINT   shift, and go to state 7
    INC     shift, and go to state 8
    DEC     shift, and go to state 9
    '{'     shift, and go to state 89

    command       go to state 90
    assignment    go to state 11
    print         go to state 12
    ret           go to state 13
    body          go to state 91
    if            go to state 14
    while         go to state 15
    unary_opertr  go to state 16


State 86

   36 while: WHILE $@4 '(' expr2 ')' . $@5 body

    $default  reduce using rule 35 ($@5)

    $@5  go to state 92


State 87

   22 expr: NOT '(' expr ')' .

    $default  reduce using rule 22 (expr)


State 88

   21 expr: '(' $@1 expr ')' .

    $default  reduce using rule 21 (expr)


State 89

   27 body: '{' . commands '}'

    $default  reduce using rule 1 (commands)

    commands  go to state 93


State 90

   28 body: command .

    $default  reduce using rule 28 (body)


State 91

   33 if: IF '(' expr2 ')' $@2 body . $@3 else

    $default  reduce using rule 32 ($@3)

    $@3  go to state 94


State 92

   36 while: WHILE $@4 '(' expr2 ')' $@5 . body

    VAR     shift, and go to state 3
    IF      shift, and go to state 4
    WHILE   shift, and go to state 5
    RETURN  shift, and go to state 6
    PRINT   shift, and go to state 7
    INC     shift, and go to state 8
    DEC     shift, and go to state 9
    '{'     shift, and go to state 89

    command       go to state 90
    assignment    go to state 11
    print         go to state 12
    ret           go to state 13
    body          go to state 95
    if            go to state 14
    while         go to state 15
    unary_opertr  go to state 16


State 93

    2 commands: commands . command
   27 body: '{' commands . '}'

    VAR     shift, and go to state 3
    IF      shift, and go to state 4
    WHILE   shift, and go to state 5
    RETURN  shift, and go to state 6
    PRINT   shift, and go to state 7
    INC     shift, and go to state 8
    DEC     shift, and go to state 9
    '}'     shift, and go to state 96

    command       go to state 10
    assignment    go to state 11
    print         go to state 12
    ret           go to state 13
    if            go to state 14
    while         go to state 15
    unary_opertr  go to state 16


State 94

   33 if: IF '(' expr2 ')' $@2 body $@3 . else

    ELSE  shift, and go to state 97

    ELSE      [reduce using rule 29 (else)]
    $default  reduce using rule 29 (else)

    else  go to state 98


State 95

   36 while: WHILE $@4 '(' expr2 ')' $@5 body .

    $default  reduce using rule 36 (while)


State 96

   27 body: '{' commands '}' .

    $default  reduce using rule 27 (body)


State 97

   30 else: ELSE . body

    VAR     shift, and go to state 3
    IF      shift, and go to state 4
    WHILE   shift, and go to state 5
    RETURN  shift, and go to state 6
    PRINT   shift, and go to state 7
    INC     shift, and go to state 8
    DEC     shift, and go to state 9
    '{'     shift, and go to state 89

    command       go to state 90
    assignment    go to state 11
    print         go to state 12
    ret           go to state 13
    body          go to state 99
    if            go to state 14
    while         go to state 15
    unary_opertr  go to state 16


State 98

   33 if: IF '(' expr2 ')' $@2 body $@3 else .

    $default  reduce using rule 33 (if)


State 99

   30 else: ELSE body .

    $default  reduce using rule 30 (else)
