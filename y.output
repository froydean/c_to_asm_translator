State 38 conflicts: 7 shift/reduce
State 47 conflicts: 5 shift/reduce
State 49 conflicts: 6 shift/reduce
State 70 conflicts: 1 shift/reduce
State 86 conflicts: 10 shift/reduce
State 92 conflicts: 8 shift/reduce
State 93 conflicts: 8 shift/reduce
State 95 conflicts: 8 shift/reduce
State 96 conflicts: 8 shift/reduce
State 98 conflicts: 7 shift/reduce
State 104 conflicts: 1 shift/reduce
State 106 conflicts: 7 shift/reduce
State 111 conflicts: 7 shift/reduce


Grammar

    0 $accept: command $end

    1 command: assignment SEMICOLON
    2        | unary_opertr VAR SEMICOLON
    3        | VAR unary_opertr SEMICOLON
    4        | print SEMICOLON
    5        | ret SEMICOLON
    6        | if
    7        | while
    8        | command command

    9 assignment: VAR assign_operator expr

   10 expr: expr bin_opertr expr
   11     | INC VAR
   12     | DEC VAR
   13     | VAR INC
   14     | VAR DEC
   15     | VAR
   16     | NUMBER

   17 $@1: %empty

   18 expr: '(' $@1 expr ')'

   19 print: PRINT '(' expr ')'

   20 ret: RETURN expr
   21    | RETURN

   22 if: IF '(' bool_condition ')' '{' command '}'
   23   | IF '(' bool_condition ')' '{' command '}' ELSE '{' command '}'
   24   | IF '(' bool_condition ')' '{' command '}' ELSE command
   25   | IF '(' bool_condition ')' command ELSE '{' command '}'
   26   | IF '(' bool_condition ')' command
   27   | IF '(' bool_condition ')' command ELSE command

   28 while: WHILE '(' bool_condition ')' '{' command '}'
   29      | WHILE '(' bool_condition ')' command

   30 bool_condition: expr
   31               | NOT expr
   32               | assignment
   33               | NOT '(' assignment ')'
   34               | expr comparison_operator expr
   35               | bool_condition AND bool_condition
   36               | bool_condition OR bool_condition
   37               | bool_condition comparison_operator bool_condition
   38               | '(' bool_condition ')'

   39 assign_operator: EQUAL
   40                | ADD_EQ
   41                | SUB_EQ
   42                | MULT_EQ
   43                | DIV_EQ
   44                | MOD_EQ
   45                | PUSHL_EQ
   46                | PUSHR_EQ
   47                | XOR_EQ
   48                | OR_EQ
   49                | AND_EQ

   50 comparison_operator: EQUAL_DOUBLE
   51                    | NOT_EQUAL
   52                    | MORE_EQ
   53                    | LESS_EQ
   54                    | LESS
   55                    | MORE

   56 bin_opertr: MINUS
   57           | PLUS
   58           | MULT
   59           | DIV
   60           | MOD
   61           | XOR
   62           | OR_SINGLE
   63           | AND_SINGLE
   64           | PUSHL
   65           | PUSHR

   66 unary_opertr: INC
   67             | DEC


Terminals, with rules where they appear

    $end (0) 0
    '(' (40) 18 19 22 23 24 25 26 27 28 29 33 38
    ')' (41) 18 19 22 23 24 25 26 27 28 29 33 38
    '{' (123) 22 23 24 25 28
    '}' (125) 22 23 24 25 28
    error (256)
    NUMBER <string> (258) 16
    VAR <string> (259) 2 3 9 11 12 13 14 15
    IF (260) 22 23 24 25 26 27
    ELSE (261) 23 24 25 27
    WHILE (262) 28 29
    RETURN (263) 20 21
    PRINT (264) 19
    ADD_EQ (265) 40
    SUB_EQ (266) 41
    MULT_EQ (267) 42
    DIV_EQ (268) 43
    MOD_EQ (269) 44
    MORE_EQ (270) 52
    LESS_EQ (271) 53
    NOT_EQUAL (272) 51
    EQUAL_DOUBLE (273) 50
    PUSHL_EQ (274) 45
    PUSHR_EQ (275) 46
    PUSHL (276) 64
    PUSHR (277) 65
    MORE (278) 55
    LESS (279) 54
    XOR_EQ (280) 47
    OR_EQ (281) 48
    AND_EQ (282) 49
    AND (283) 35
    OR (284) 36
    AND_SINGLE (285) 63
    MINUS (286) 56
    SEMICOLON (287) 1 2 3 4 5
    EQUAL (288) 39
    PLUS (289) 57
    MULT (290) 58
    DIV (291) 59
    NOT (292) 31 33
    MOD (293) 60
    XOR (294) 61
    OR_SINGLE (295) 62
    INC (296) 11 13 66
    DEC (297) 12 14 67


Nonterminals, with rules where they appear

    $accept (47)
        on left: 0
    command (48)
        on left: 1 2 3 4 5 6 7 8
        on right: 0 8 22 23 24 25 26 27 28 29
    assignment (49)
        on left: 9
        on right: 1 32 33
    expr (50)
        on left: 10 11 12 13 14 15 16 18
        on right: 9 10 18 19 20 30 31 34
    $@1 (51)
        on left: 17
        on right: 18
    print (52)
        on left: 19
        on right: 4
    ret (53)
        on left: 20 21
        on right: 5
    if (54)
        on left: 22 23 24 25 26 27
        on right: 6
    while (55)
        on left: 28 29
        on right: 7
    bool_condition (56)
        on left: 30 31 32 33 34 35 36 37 38
        on right: 22 23 24 25 26 27 28 29 35 36 37 38
    assign_operator (57)
        on left: 39 40 41 42 43 44 45 46 47 48 49
        on right: 9
    comparison_operator (58)
        on left: 50 51 52 53 54 55
        on right: 34 37
    bin_opertr (59)
        on left: 56 57 58 59 60 61 62 63 64 65
        on right: 10
    unary_opertr (60)
        on left: 66 67
        on right: 2 3


State 0

    0 $accept: . command $end

    VAR     shift, and go to state 1
    IF      shift, and go to state 2
    WHILE   shift, and go to state 3
    RETURN  shift, and go to state 4
    PRINT   shift, and go to state 5
    INC     shift, and go to state 6
    DEC     shift, and go to state 7

    command       go to state 8
    assignment    go to state 9
    print         go to state 10
    ret           go to state 11
    if            go to state 12
    while         go to state 13
    unary_opertr  go to state 14


State 1

    3 command: VAR . unary_opertr SEMICOLON
    9 assignment: VAR . assign_operator expr

    ADD_EQ    shift, and go to state 15
    SUB_EQ    shift, and go to state 16
    MULT_EQ   shift, and go to state 17
    DIV_EQ    shift, and go to state 18
    MOD_EQ    shift, and go to state 19
    PUSHL_EQ  shift, and go to state 20
    PUSHR_EQ  shift, and go to state 21
    XOR_EQ    shift, and go to state 22
    OR_EQ     shift, and go to state 23
    AND_EQ    shift, and go to state 24
    EQUAL     shift, and go to state 25
    INC       shift, and go to state 6
    DEC       shift, and go to state 7

    assign_operator  go to state 26
    unary_opertr     go to state 27


State 2

   22 if: IF . '(' bool_condition ')' '{' command '}'
   23   | IF . '(' bool_condition ')' '{' command '}' ELSE '{' command '}'
   24   | IF . '(' bool_condition ')' '{' command '}' ELSE command
   25   | IF . '(' bool_condition ')' command ELSE '{' command '}'
   26   | IF . '(' bool_condition ')' command
   27   | IF . '(' bool_condition ')' command ELSE command

    '('  shift, and go to state 28


State 3

   28 while: WHILE . '(' bool_condition ')' '{' command '}'
   29      | WHILE . '(' bool_condition ')' command

    '('  shift, and go to state 29


State 4

   20 ret: RETURN . expr
   21    | RETURN .

    NUMBER  shift, and go to state 30
    VAR     shift, and go to state 31
    INC     shift, and go to state 32
    DEC     shift, and go to state 33
    '('     shift, and go to state 34

    $default  reduce using rule 21 (ret)

    expr  go to state 35


State 5

   19 print: PRINT . '(' expr ')'

    '('  shift, and go to state 36


State 6

   66 unary_opertr: INC .

    $default  reduce using rule 66 (unary_opertr)


State 7

   67 unary_opertr: DEC .

    $default  reduce using rule 67 (unary_opertr)


State 8

    0 $accept: command . $end
    8 command: command . command

    $end    shift, and go to state 37
    VAR     shift, and go to state 1
    IF      shift, and go to state 2
    WHILE   shift, and go to state 3
    RETURN  shift, and go to state 4
    PRINT   shift, and go to state 5
    INC     shift, and go to state 6
    DEC     shift, and go to state 7

    command       go to state 38
    assignment    go to state 9
    print         go to state 10
    ret           go to state 11
    if            go to state 12
    while         go to state 13
    unary_opertr  go to state 14


State 9

    1 command: assignment . SEMICOLON

    SEMICOLON  shift, and go to state 39


State 10

    4 command: print . SEMICOLON

    SEMICOLON  shift, and go to state 40


State 11

    5 command: ret . SEMICOLON

    SEMICOLON  shift, and go to state 41


State 12

    6 command: if .

    $default  reduce using rule 6 (command)


State 13

    7 command: while .

    $default  reduce using rule 7 (command)


State 14

    2 command: unary_opertr . VAR SEMICOLON

    VAR  shift, and go to state 42


State 15

   40 assign_operator: ADD_EQ .

    $default  reduce using rule 40 (assign_operator)


State 16

   41 assign_operator: SUB_EQ .

    $default  reduce using rule 41 (assign_operator)


State 17

   42 assign_operator: MULT_EQ .

    $default  reduce using rule 42 (assign_operator)


State 18

   43 assign_operator: DIV_EQ .

    $default  reduce using rule 43 (assign_operator)


State 19

   44 assign_operator: MOD_EQ .

    $default  reduce using rule 44 (assign_operator)


State 20

   45 assign_operator: PUSHL_EQ .

    $default  reduce using rule 45 (assign_operator)


State 21

   46 assign_operator: PUSHR_EQ .

    $default  reduce using rule 46 (assign_operator)


State 22

   47 assign_operator: XOR_EQ .

    $default  reduce using rule 47 (assign_operator)


State 23

   48 assign_operator: OR_EQ .

    $default  reduce using rule 48 (assign_operator)


State 24

   49 assign_operator: AND_EQ .

    $default  reduce using rule 49 (assign_operator)


State 25

   39 assign_operator: EQUAL .

    $default  reduce using rule 39 (assign_operator)


State 26

    9 assignment: VAR assign_operator . expr

    NUMBER  shift, and go to state 30
    VAR     shift, and go to state 31
    INC     shift, and go to state 32
    DEC     shift, and go to state 33
    '('     shift, and go to state 34

    expr  go to state 43


State 27

    3 command: VAR unary_opertr . SEMICOLON

    SEMICOLON  shift, and go to state 44


State 28

   22 if: IF '(' . bool_condition ')' '{' command '}'
   23   | IF '(' . bool_condition ')' '{' command '}' ELSE '{' command '}'
   24   | IF '(' . bool_condition ')' '{' command '}' ELSE command
   25   | IF '(' . bool_condition ')' command ELSE '{' command '}'
   26   | IF '(' . bool_condition ')' command
   27   | IF '(' . bool_condition ')' command ELSE command

    NUMBER  shift, and go to state 30
    VAR     shift, and go to state 45
    NOT     shift, and go to state 46
    INC     shift, and go to state 32
    DEC     shift, and go to state 33
    '('     shift, and go to state 47

    assignment      go to state 48
    expr            go to state 49
    bool_condition  go to state 50


State 29

   28 while: WHILE '(' . bool_condition ')' '{' command '}'
   29      | WHILE '(' . bool_condition ')' command

    NUMBER  shift, and go to state 30
    VAR     shift, and go to state 45
    NOT     shift, and go to state 46
    INC     shift, and go to state 32
    DEC     shift, and go to state 33
    '('     shift, and go to state 47

    assignment      go to state 48
    expr            go to state 49
    bool_condition  go to state 51


State 30

   16 expr: NUMBER .

    $default  reduce using rule 16 (expr)


State 31

   13 expr: VAR . INC
   14     | VAR . DEC
   15     | VAR .

    INC  shift, and go to state 52
    DEC  shift, and go to state 53

    $default  reduce using rule 15 (expr)


State 32

   11 expr: INC . VAR

    VAR  shift, and go to state 54


State 33

   12 expr: DEC . VAR

    VAR  shift, and go to state 55


State 34

   18 expr: '(' . $@1 expr ')'

    $default  reduce using rule 17 ($@1)

    $@1  go to state 56


State 35

   10 expr: expr . bin_opertr expr
   20 ret: RETURN expr .

    PUSHL       shift, and go to state 57
    PUSHR       shift, and go to state 58
    AND_SINGLE  shift, and go to state 59
    MINUS       shift, and go to state 60
    PLUS        shift, and go to state 61
    MULT        shift, and go to state 62
    DIV         shift, and go to state 63
    MOD         shift, and go to state 64
    XOR         shift, and go to state 65
    OR_SINGLE   shift, and go to state 66

    $default  reduce using rule 20 (ret)

    bin_opertr  go to state 67


State 36

   19 print: PRINT '(' . expr ')'

    NUMBER  shift, and go to state 30
    VAR     shift, and go to state 31
    INC     shift, and go to state 32
    DEC     shift, and go to state 33
    '('     shift, and go to state 34

    expr  go to state 68


State 37

    0 $accept: command $end .

    $default  accept


State 38

    8 command: command . command
    8        | command command .

    VAR     shift, and go to state 1
    IF      shift, and go to state 2
    WHILE   shift, and go to state 3
    RETURN  shift, and go to state 4
    PRINT   shift, and go to state 5
    INC     shift, and go to state 6
    DEC     shift, and go to state 7

    VAR       [reduce using rule 8 (command)]
    IF        [reduce using rule 8 (command)]
    WHILE     [reduce using rule 8 (command)]
    RETURN    [reduce using rule 8 (command)]
    PRINT     [reduce using rule 8 (command)]
    INC       [reduce using rule 8 (command)]
    DEC       [reduce using rule 8 (command)]
    $default  reduce using rule 8 (command)

    command       go to state 38
    assignment    go to state 9
    print         go to state 10
    ret           go to state 11
    if            go to state 12
    while         go to state 13
    unary_opertr  go to state 14


State 39

    1 command: assignment SEMICOLON .

    $default  reduce using rule 1 (command)


State 40

    4 command: print SEMICOLON .

    $default  reduce using rule 4 (command)


State 41

    5 command: ret SEMICOLON .

    $default  reduce using rule 5 (command)


State 42

    2 command: unary_opertr VAR . SEMICOLON

    SEMICOLON  shift, and go to state 69


State 43

    9 assignment: VAR assign_operator expr .
   10 expr: expr . bin_opertr expr

    PUSHL       shift, and go to state 57
    PUSHR       shift, and go to state 58
    AND_SINGLE  shift, and go to state 59
    MINUS       shift, and go to state 60
    PLUS        shift, and go to state 61
    MULT        shift, and go to state 62
    DIV         shift, and go to state 63
    MOD         shift, and go to state 64
    XOR         shift, and go to state 65
    OR_SINGLE   shift, and go to state 66

    $default  reduce using rule 9 (assignment)

    bin_opertr  go to state 67


State 44

    3 command: VAR unary_opertr SEMICOLON .

    $default  reduce using rule 3 (command)


State 45

    9 assignment: VAR . assign_operator expr
   13 expr: VAR . INC
   14     | VAR . DEC
   15     | VAR .

    ADD_EQ    shift, and go to state 15
    SUB_EQ    shift, and go to state 16
    MULT_EQ   shift, and go to state 17
    DIV_EQ    shift, and go to state 18
    MOD_EQ    shift, and go to state 19
    PUSHL_EQ  shift, and go to state 20
    PUSHR_EQ  shift, and go to state 21
    XOR_EQ    shift, and go to state 22
    OR_EQ     shift, and go to state 23
    AND_EQ    shift, and go to state 24
    EQUAL     shift, and go to state 25
    INC       shift, and go to state 52
    DEC       shift, and go to state 53

    $default  reduce using rule 15 (expr)

    assign_operator  go to state 26


State 46

   31 bool_condition: NOT . expr
   33               | NOT . '(' assignment ')'

    NUMBER  shift, and go to state 30
    VAR     shift, and go to state 31
    INC     shift, and go to state 32
    DEC     shift, and go to state 33
    '('     shift, and go to state 70

    expr  go to state 71


State 47

   18 expr: '(' . $@1 expr ')'
   38 bool_condition: '(' . bool_condition ')'

    NUMBER  shift, and go to state 30
    VAR     shift, and go to state 45
    NOT     shift, and go to state 46
    INC     shift, and go to state 32
    DEC     shift, and go to state 33
    '('     shift, and go to state 47

    NUMBER  [reduce using rule 17 ($@1)]
    VAR     [reduce using rule 17 ($@1)]
    INC     [reduce using rule 17 ($@1)]
    DEC     [reduce using rule 17 ($@1)]
    '('     [reduce using rule 17 ($@1)]

    assignment      go to state 48
    expr            go to state 49
    $@1             go to state 56
    bool_condition  go to state 72


State 48

   32 bool_condition: assignment .

    $default  reduce using rule 32 (bool_condition)


State 49

   10 expr: expr . bin_opertr expr
   30 bool_condition: expr .
   34               | expr . comparison_operator expr

    MORE_EQ       shift, and go to state 73
    LESS_EQ       shift, and go to state 74
    NOT_EQUAL     shift, and go to state 75
    EQUAL_DOUBLE  shift, and go to state 76
    PUSHL         shift, and go to state 57
    PUSHR         shift, and go to state 58
    MORE          shift, and go to state 77
    LESS          shift, and go to state 78
    AND_SINGLE    shift, and go to state 59
    MINUS         shift, and go to state 60
    PLUS          shift, and go to state 61
    MULT          shift, and go to state 62
    DIV           shift, and go to state 63
    MOD           shift, and go to state 64
    XOR           shift, and go to state 65
    OR_SINGLE     shift, and go to state 66

    MORE_EQ       [reduce using rule 30 (bool_condition)]
    LESS_EQ       [reduce using rule 30 (bool_condition)]
    NOT_EQUAL     [reduce using rule 30 (bool_condition)]
    EQUAL_DOUBLE  [reduce using rule 30 (bool_condition)]
    MORE          [reduce using rule 30 (bool_condition)]
    LESS          [reduce using rule 30 (bool_condition)]
    $default      reduce using rule 30 (bool_condition)

    comparison_operator  go to state 79
    bin_opertr           go to state 67


State 50

   22 if: IF '(' bool_condition . ')' '{' command '}'
   23   | IF '(' bool_condition . ')' '{' command '}' ELSE '{' command '}'
   24   | IF '(' bool_condition . ')' '{' command '}' ELSE command
   25   | IF '(' bool_condition . ')' command ELSE '{' command '}'
   26   | IF '(' bool_condition . ')' command
   27   | IF '(' bool_condition . ')' command ELSE command
   35 bool_condition: bool_condition . AND bool_condition
   36               | bool_condition . OR bool_condition
   37               | bool_condition . comparison_operator bool_condition

    MORE_EQ       shift, and go to state 73
    LESS_EQ       shift, and go to state 74
    NOT_EQUAL     shift, and go to state 75
    EQUAL_DOUBLE  shift, and go to state 76
    MORE          shift, and go to state 77
    LESS          shift, and go to state 78
    AND           shift, and go to state 80
    OR            shift, and go to state 81
    ')'           shift, and go to state 82

    comparison_operator  go to state 83


State 51

   28 while: WHILE '(' bool_condition . ')' '{' command '}'
   29      | WHILE '(' bool_condition . ')' command
   35 bool_condition: bool_condition . AND bool_condition
   36               | bool_condition . OR bool_condition
   37               | bool_condition . comparison_operator bool_condition

    MORE_EQ       shift, and go to state 73
    LESS_EQ       shift, and go to state 74
    NOT_EQUAL     shift, and go to state 75
    EQUAL_DOUBLE  shift, and go to state 76
    MORE          shift, and go to state 77
    LESS          shift, and go to state 78
    AND           shift, and go to state 80
    OR            shift, and go to state 81
    ')'           shift, and go to state 84

    comparison_operator  go to state 83


State 52

   13 expr: VAR INC .

    $default  reduce using rule 13 (expr)


State 53

   14 expr: VAR DEC .

    $default  reduce using rule 14 (expr)


State 54

   11 expr: INC VAR .

    $default  reduce using rule 11 (expr)


State 55

   12 expr: DEC VAR .

    $default  reduce using rule 12 (expr)


State 56

   18 expr: '(' $@1 . expr ')'

    NUMBER  shift, and go to state 30
    VAR     shift, and go to state 31
    INC     shift, and go to state 32
    DEC     shift, and go to state 33
    '('     shift, and go to state 34

    expr  go to state 85


State 57

   64 bin_opertr: PUSHL .

    $default  reduce using rule 64 (bin_opertr)


State 58

   65 bin_opertr: PUSHR .

    $default  reduce using rule 65 (bin_opertr)


State 59

   63 bin_opertr: AND_SINGLE .

    $default  reduce using rule 63 (bin_opertr)


State 60

   56 bin_opertr: MINUS .

    $default  reduce using rule 56 (bin_opertr)


State 61

   57 bin_opertr: PLUS .

    $default  reduce using rule 57 (bin_opertr)


State 62

   58 bin_opertr: MULT .

    $default  reduce using rule 58 (bin_opertr)


State 63

   59 bin_opertr: DIV .

    $default  reduce using rule 59 (bin_opertr)


State 64

   60 bin_opertr: MOD .

    $default  reduce using rule 60 (bin_opertr)


State 65

   61 bin_opertr: XOR .

    $default  reduce using rule 61 (bin_opertr)


State 66

   62 bin_opertr: OR_SINGLE .

    $default  reduce using rule 62 (bin_opertr)


State 67

   10 expr: expr bin_opertr . expr

    NUMBER  shift, and go to state 30
    VAR     shift, and go to state 31
    INC     shift, and go to state 32
    DEC     shift, and go to state 33
    '('     shift, and go to state 34

    expr  go to state 86


State 68

   10 expr: expr . bin_opertr expr
   19 print: PRINT '(' expr . ')'

    PUSHL       shift, and go to state 57
    PUSHR       shift, and go to state 58
    AND_SINGLE  shift, and go to state 59
    MINUS       shift, and go to state 60
    PLUS        shift, and go to state 61
    MULT        shift, and go to state 62
    DIV         shift, and go to state 63
    MOD         shift, and go to state 64
    XOR         shift, and go to state 65
    OR_SINGLE   shift, and go to state 66
    ')'         shift, and go to state 87

    bin_opertr  go to state 67


State 69

    2 command: unary_opertr VAR SEMICOLON .

    $default  reduce using rule 2 (command)


State 70

   18 expr: '(' . $@1 expr ')'
   33 bool_condition: NOT '(' . assignment ')'

    VAR  shift, and go to state 88

    VAR       [reduce using rule 17 ($@1)]
    $default  reduce using rule 17 ($@1)

    assignment  go to state 89
    $@1         go to state 56


State 71

   10 expr: expr . bin_opertr expr
   31 bool_condition: NOT expr .

    PUSHL       shift, and go to state 57
    PUSHR       shift, and go to state 58
    AND_SINGLE  shift, and go to state 59
    MINUS       shift, and go to state 60
    PLUS        shift, and go to state 61
    MULT        shift, and go to state 62
    DIV         shift, and go to state 63
    MOD         shift, and go to state 64
    XOR         shift, and go to state 65
    OR_SINGLE   shift, and go to state 66

    $default  reduce using rule 31 (bool_condition)

    bin_opertr  go to state 67


State 72

   35 bool_condition: bool_condition . AND bool_condition
   36               | bool_condition . OR bool_condition
   37               | bool_condition . comparison_operator bool_condition
   38               | '(' bool_condition . ')'

    MORE_EQ       shift, and go to state 73
    LESS_EQ       shift, and go to state 74
    NOT_EQUAL     shift, and go to state 75
    EQUAL_DOUBLE  shift, and go to state 76
    MORE          shift, and go to state 77
    LESS          shift, and go to state 78
    AND           shift, and go to state 80
    OR            shift, and go to state 81
    ')'           shift, and go to state 90

    comparison_operator  go to state 83


State 73

   52 comparison_operator: MORE_EQ .

    $default  reduce using rule 52 (comparison_operator)


State 74

   53 comparison_operator: LESS_EQ .

    $default  reduce using rule 53 (comparison_operator)


State 75

   51 comparison_operator: NOT_EQUAL .

    $default  reduce using rule 51 (comparison_operator)


State 76

   50 comparison_operator: EQUAL_DOUBLE .

    $default  reduce using rule 50 (comparison_operator)


State 77

   55 comparison_operator: MORE .

    $default  reduce using rule 55 (comparison_operator)


State 78

   54 comparison_operator: LESS .

    $default  reduce using rule 54 (comparison_operator)


State 79

   34 bool_condition: expr comparison_operator . expr

    NUMBER  shift, and go to state 30
    VAR     shift, and go to state 31
    INC     shift, and go to state 32
    DEC     shift, and go to state 33
    '('     shift, and go to state 34

    expr  go to state 91


State 80

   35 bool_condition: bool_condition AND . bool_condition

    NUMBER  shift, and go to state 30
    VAR     shift, and go to state 45
    NOT     shift, and go to state 46
    INC     shift, and go to state 32
    DEC     shift, and go to state 33
    '('     shift, and go to state 47

    assignment      go to state 48
    expr            go to state 49
    bool_condition  go to state 92


State 81

   36 bool_condition: bool_condition OR . bool_condition

    NUMBER  shift, and go to state 30
    VAR     shift, and go to state 45
    NOT     shift, and go to state 46
    INC     shift, and go to state 32
    DEC     shift, and go to state 33
    '('     shift, and go to state 47

    assignment      go to state 48
    expr            go to state 49
    bool_condition  go to state 93


State 82

   22 if: IF '(' bool_condition ')' . '{' command '}'
   23   | IF '(' bool_condition ')' . '{' command '}' ELSE '{' command '}'
   24   | IF '(' bool_condition ')' . '{' command '}' ELSE command
   25   | IF '(' bool_condition ')' . command ELSE '{' command '}'
   26   | IF '(' bool_condition ')' . command
   27   | IF '(' bool_condition ')' . command ELSE command

    VAR     shift, and go to state 1
    IF      shift, and go to state 2
    WHILE   shift, and go to state 3
    RETURN  shift, and go to state 4
    PRINT   shift, and go to state 5
    INC     shift, and go to state 6
    DEC     shift, and go to state 7
    '{'     shift, and go to state 94

    command       go to state 95
    assignment    go to state 9
    print         go to state 10
    ret           go to state 11
    if            go to state 12
    while         go to state 13
    unary_opertr  go to state 14


State 83

   37 bool_condition: bool_condition comparison_operator . bool_condition

    NUMBER  shift, and go to state 30
    VAR     shift, and go to state 45
    NOT     shift, and go to state 46
    INC     shift, and go to state 32
    DEC     shift, and go to state 33
    '('     shift, and go to state 47

    assignment      go to state 48
    expr            go to state 49
    bool_condition  go to state 96


State 84

   28 while: WHILE '(' bool_condition ')' . '{' command '}'
   29      | WHILE '(' bool_condition ')' . command

    VAR     shift, and go to state 1
    IF      shift, and go to state 2
    WHILE   shift, and go to state 3
    RETURN  shift, and go to state 4
    PRINT   shift, and go to state 5
    INC     shift, and go to state 6
    DEC     shift, and go to state 7
    '{'     shift, and go to state 97

    command       go to state 98
    assignment    go to state 9
    print         go to state 10
    ret           go to state 11
    if            go to state 12
    while         go to state 13
    unary_opertr  go to state 14


State 85

   10 expr: expr . bin_opertr expr
   18     | '(' $@1 expr . ')'

    PUSHL       shift, and go to state 57
    PUSHR       shift, and go to state 58
    AND_SINGLE  shift, and go to state 59
    MINUS       shift, and go to state 60
    PLUS        shift, and go to state 61
    MULT        shift, and go to state 62
    DIV         shift, and go to state 63
    MOD         shift, and go to state 64
    XOR         shift, and go to state 65
    OR_SINGLE   shift, and go to state 66
    ')'         shift, and go to state 99

    bin_opertr  go to state 67


State 86

   10 expr: expr . bin_opertr expr
   10     | expr bin_opertr expr .

    PUSHL       shift, and go to state 57
    PUSHR       shift, and go to state 58
    AND_SINGLE  shift, and go to state 59
    MINUS       shift, and go to state 60
    PLUS        shift, and go to state 61
    MULT        shift, and go to state 62
    DIV         shift, and go to state 63
    MOD         shift, and go to state 64
    XOR         shift, and go to state 65
    OR_SINGLE   shift, and go to state 66

    PUSHL       [reduce using rule 10 (expr)]
    PUSHR       [reduce using rule 10 (expr)]
    AND_SINGLE  [reduce using rule 10 (expr)]
    MINUS       [reduce using rule 10 (expr)]
    PLUS        [reduce using rule 10 (expr)]
    MULT        [reduce using rule 10 (expr)]
    DIV         [reduce using rule 10 (expr)]
    MOD         [reduce using rule 10 (expr)]
    XOR         [reduce using rule 10 (expr)]
    OR_SINGLE   [reduce using rule 10 (expr)]
    $default    reduce using rule 10 (expr)

    bin_opertr  go to state 67


State 87

   19 print: PRINT '(' expr ')' .

    $default  reduce using rule 19 (print)


State 88

    9 assignment: VAR . assign_operator expr

    ADD_EQ    shift, and go to state 15
    SUB_EQ    shift, and go to state 16
    MULT_EQ   shift, and go to state 17
    DIV_EQ    shift, and go to state 18
    MOD_EQ    shift, and go to state 19
    PUSHL_EQ  shift, and go to state 20
    PUSHR_EQ  shift, and go to state 21
    XOR_EQ    shift, and go to state 22
    OR_EQ     shift, and go to state 23
    AND_EQ    shift, and go to state 24
    EQUAL     shift, and go to state 25

    assign_operator  go to state 26


State 89

   33 bool_condition: NOT '(' assignment . ')'

    ')'  shift, and go to state 100


State 90

   38 bool_condition: '(' bool_condition ')' .

    $default  reduce using rule 38 (bool_condition)


State 91

   10 expr: expr . bin_opertr expr
   34 bool_condition: expr comparison_operator expr .

    PUSHL       shift, and go to state 57
    PUSHR       shift, and go to state 58
    AND_SINGLE  shift, and go to state 59
    MINUS       shift, and go to state 60
    PLUS        shift, and go to state 61
    MULT        shift, and go to state 62
    DIV         shift, and go to state 63
    MOD         shift, and go to state 64
    XOR         shift, and go to state 65
    OR_SINGLE   shift, and go to state 66

    $default  reduce using rule 34 (bool_condition)

    bin_opertr  go to state 67


State 92

   35 bool_condition: bool_condition . AND bool_condition
   35               | bool_condition AND bool_condition .
   36               | bool_condition . OR bool_condition
   37               | bool_condition . comparison_operator bool_condition

    MORE_EQ       shift, and go to state 73
    LESS_EQ       shift, and go to state 74
    NOT_EQUAL     shift, and go to state 75
    EQUAL_DOUBLE  shift, and go to state 76
    MORE          shift, and go to state 77
    LESS          shift, and go to state 78
    AND           shift, and go to state 80
    OR            shift, and go to state 81

    MORE_EQ       [reduce using rule 35 (bool_condition)]
    LESS_EQ       [reduce using rule 35 (bool_condition)]
    NOT_EQUAL     [reduce using rule 35 (bool_condition)]
    EQUAL_DOUBLE  [reduce using rule 35 (bool_condition)]
    MORE          [reduce using rule 35 (bool_condition)]
    LESS          [reduce using rule 35 (bool_condition)]
    AND           [reduce using rule 35 (bool_condition)]
    OR            [reduce using rule 35 (bool_condition)]
    $default      reduce using rule 35 (bool_condition)

    comparison_operator  go to state 83


State 93

   35 bool_condition: bool_condition . AND bool_condition
   36               | bool_condition . OR bool_condition
   36               | bool_condition OR bool_condition .
   37               | bool_condition . comparison_operator bool_condition

    MORE_EQ       shift, and go to state 73
    LESS_EQ       shift, and go to state 74
    NOT_EQUAL     shift, and go to state 75
    EQUAL_DOUBLE  shift, and go to state 76
    MORE          shift, and go to state 77
    LESS          shift, and go to state 78
    AND           shift, and go to state 80
    OR            shift, and go to state 81

    MORE_EQ       [reduce using rule 36 (bool_condition)]
    LESS_EQ       [reduce using rule 36 (bool_condition)]
    NOT_EQUAL     [reduce using rule 36 (bool_condition)]
    EQUAL_DOUBLE  [reduce using rule 36 (bool_condition)]
    MORE          [reduce using rule 36 (bool_condition)]
    LESS          [reduce using rule 36 (bool_condition)]
    AND           [reduce using rule 36 (bool_condition)]
    OR            [reduce using rule 36 (bool_condition)]
    $default      reduce using rule 36 (bool_condition)

    comparison_operator  go to state 83


State 94

   22 if: IF '(' bool_condition ')' '{' . command '}'
   23   | IF '(' bool_condition ')' '{' . command '}' ELSE '{' command '}'
   24   | IF '(' bool_condition ')' '{' . command '}' ELSE command

    VAR     shift, and go to state 1
    IF      shift, and go to state 2
    WHILE   shift, and go to state 3
    RETURN  shift, and go to state 4
    PRINT   shift, and go to state 5
    INC     shift, and go to state 6
    DEC     shift, and go to state 7

    command       go to state 101
    assignment    go to state 9
    print         go to state 10
    ret           go to state 11
    if            go to state 12
    while         go to state 13
    unary_opertr  go to state 14


State 95

    8 command: command . command
   25 if: IF '(' bool_condition ')' command . ELSE '{' command '}'
   26   | IF '(' bool_condition ')' command .
   27   | IF '(' bool_condition ')' command . ELSE command

    VAR     shift, and go to state 1
    IF      shift, and go to state 2
    ELSE    shift, and go to state 102
    WHILE   shift, and go to state 3
    RETURN  shift, and go to state 4
    PRINT   shift, and go to state 5
    INC     shift, and go to state 6
    DEC     shift, and go to state 7

    VAR       [reduce using rule 26 (if)]
    IF        [reduce using rule 26 (if)]
    ELSE      [reduce using rule 26 (if)]
    WHILE     [reduce using rule 26 (if)]
    RETURN    [reduce using rule 26 (if)]
    PRINT     [reduce using rule 26 (if)]
    INC       [reduce using rule 26 (if)]
    DEC       [reduce using rule 26 (if)]
    $default  reduce using rule 26 (if)

    command       go to state 38
    assignment    go to state 9
    print         go to state 10
    ret           go to state 11
    if            go to state 12
    while         go to state 13
    unary_opertr  go to state 14


State 96

   35 bool_condition: bool_condition . AND bool_condition
   36               | bool_condition . OR bool_condition
   37               | bool_condition . comparison_operator bool_condition
   37               | bool_condition comparison_operator bool_condition .

    MORE_EQ       shift, and go to state 73
    LESS_EQ       shift, and go to state 74
    NOT_EQUAL     shift, and go to state 75
    EQUAL_DOUBLE  shift, and go to state 76
    MORE          shift, and go to state 77
    LESS          shift, and go to state 78
    AND           shift, and go to state 80
    OR            shift, and go to state 81

    MORE_EQ       [reduce using rule 37 (bool_condition)]
    LESS_EQ       [reduce using rule 37 (bool_condition)]
    NOT_EQUAL     [reduce using rule 37 (bool_condition)]
    EQUAL_DOUBLE  [reduce using rule 37 (bool_condition)]
    MORE          [reduce using rule 37 (bool_condition)]
    LESS          [reduce using rule 37 (bool_condition)]
    AND           [reduce using rule 37 (bool_condition)]
    OR            [reduce using rule 37 (bool_condition)]
    $default      reduce using rule 37 (bool_condition)

    comparison_operator  go to state 83


State 97

   28 while: WHILE '(' bool_condition ')' '{' . command '}'

    VAR     shift, and go to state 1
    IF      shift, and go to state 2
    WHILE   shift, and go to state 3
    RETURN  shift, and go to state 4
    PRINT   shift, and go to state 5
    INC     shift, and go to state 6
    DEC     shift, and go to state 7

    command       go to state 103
    assignment    go to state 9
    print         go to state 10
    ret           go to state 11
    if            go to state 12
    while         go to state 13
    unary_opertr  go to state 14


State 98

    8 command: command . command
   29 while: WHILE '(' bool_condition ')' command .

    VAR     shift, and go to state 1
    IF      shift, and go to state 2
    WHILE   shift, and go to state 3
    RETURN  shift, and go to state 4
    PRINT   shift, and go to state 5
    INC     shift, and go to state 6
    DEC     shift, and go to state 7

    VAR       [reduce using rule 29 (while)]
    IF        [reduce using rule 29 (while)]
    WHILE     [reduce using rule 29 (while)]
    RETURN    [reduce using rule 29 (while)]
    PRINT     [reduce using rule 29 (while)]
    INC       [reduce using rule 29 (while)]
    DEC       [reduce using rule 29 (while)]
    $default  reduce using rule 29 (while)

    command       go to state 38
    assignment    go to state 9
    print         go to state 10
    ret           go to state 11
    if            go to state 12
    while         go to state 13
    unary_opertr  go to state 14


State 99

   18 expr: '(' $@1 expr ')' .

    $default  reduce using rule 18 (expr)


State 100

   33 bool_condition: NOT '(' assignment ')' .

    $default  reduce using rule 33 (bool_condition)


State 101

    8 command: command . command
   22 if: IF '(' bool_condition ')' '{' command . '}'
   23   | IF '(' bool_condition ')' '{' command . '}' ELSE '{' command '}'
   24   | IF '(' bool_condition ')' '{' command . '}' ELSE command

    VAR     shift, and go to state 1
    IF      shift, and go to state 2
    WHILE   shift, and go to state 3
    RETURN  shift, and go to state 4
    PRINT   shift, and go to state 5
    INC     shift, and go to state 6
    DEC     shift, and go to state 7
    '}'     shift, and go to state 104

    command       go to state 38
    assignment    go to state 9
    print         go to state 10
    ret           go to state 11
    if            go to state 12
    while         go to state 13
    unary_opertr  go to state 14


State 102

   25 if: IF '(' bool_condition ')' command ELSE . '{' command '}'
   27   | IF '(' bool_condition ')' command ELSE . command

    VAR     shift, and go to state 1
    IF      shift, and go to state 2
    WHILE   shift, and go to state 3
    RETURN  shift, and go to state 4
    PRINT   shift, and go to state 5
    INC     shift, and go to state 6
    DEC     shift, and go to state 7
    '{'     shift, and go to state 105

    command       go to state 106
    assignment    go to state 9
    print         go to state 10
    ret           go to state 11
    if            go to state 12
    while         go to state 13
    unary_opertr  go to state 14


State 103

    8 command: command . command
   28 while: WHILE '(' bool_condition ')' '{' command . '}'

    VAR     shift, and go to state 1
    IF      shift, and go to state 2
    WHILE   shift, and go to state 3
    RETURN  shift, and go to state 4
    PRINT   shift, and go to state 5
    INC     shift, and go to state 6
    DEC     shift, and go to state 7
    '}'     shift, and go to state 107

    command       go to state 38
    assignment    go to state 9
    print         go to state 10
    ret           go to state 11
    if            go to state 12
    while         go to state 13
    unary_opertr  go to state 14


State 104

   22 if: IF '(' bool_condition ')' '{' command '}' .
   23   | IF '(' bool_condition ')' '{' command '}' . ELSE '{' command '}'
   24   | IF '(' bool_condition ')' '{' command '}' . ELSE command

    ELSE  shift, and go to state 108

    ELSE      [reduce using rule 22 (if)]
    $default  reduce using rule 22 (if)


State 105

   25 if: IF '(' bool_condition ')' command ELSE '{' . command '}'

    VAR     shift, and go to state 1
    IF      shift, and go to state 2
    WHILE   shift, and go to state 3
    RETURN  shift, and go to state 4
    PRINT   shift, and go to state 5
    INC     shift, and go to state 6
    DEC     shift, and go to state 7

    command       go to state 109
    assignment    go to state 9
    print         go to state 10
    ret           go to state 11
    if            go to state 12
    while         go to state 13
    unary_opertr  go to state 14


State 106

    8 command: command . command
   27 if: IF '(' bool_condition ')' command ELSE command .

    VAR     shift, and go to state 1
    IF      shift, and go to state 2
    WHILE   shift, and go to state 3
    RETURN  shift, and go to state 4
    PRINT   shift, and go to state 5
    INC     shift, and go to state 6
    DEC     shift, and go to state 7

    VAR       [reduce using rule 27 (if)]
    IF        [reduce using rule 27 (if)]
    WHILE     [reduce using rule 27 (if)]
    RETURN    [reduce using rule 27 (if)]
    PRINT     [reduce using rule 27 (if)]
    INC       [reduce using rule 27 (if)]
    DEC       [reduce using rule 27 (if)]
    $default  reduce using rule 27 (if)

    command       go to state 38
    assignment    go to state 9
    print         go to state 10
    ret           go to state 11
    if            go to state 12
    while         go to state 13
    unary_opertr  go to state 14


State 107

   28 while: WHILE '(' bool_condition ')' '{' command '}' .

    $default  reduce using rule 28 (while)


State 108

   23 if: IF '(' bool_condition ')' '{' command '}' ELSE . '{' command '}'
   24   | IF '(' bool_condition ')' '{' command '}' ELSE . command

    VAR     shift, and go to state 1
    IF      shift, and go to state 2
    WHILE   shift, and go to state 3
    RETURN  shift, and go to state 4
    PRINT   shift, and go to state 5
    INC     shift, and go to state 6
    DEC     shift, and go to state 7
    '{'     shift, and go to state 110

    command       go to state 111
    assignment    go to state 9
    print         go to state 10
    ret           go to state 11
    if            go to state 12
    while         go to state 13
    unary_opertr  go to state 14


State 109

    8 command: command . command
   25 if: IF '(' bool_condition ')' command ELSE '{' command . '}'

    VAR     shift, and go to state 1
    IF      shift, and go to state 2
    WHILE   shift, and go to state 3
    RETURN  shift, and go to state 4
    PRINT   shift, and go to state 5
    INC     shift, and go to state 6
    DEC     shift, and go to state 7
    '}'     shift, and go to state 112

    command       go to state 38
    assignment    go to state 9
    print         go to state 10
    ret           go to state 11
    if            go to state 12
    while         go to state 13
    unary_opertr  go to state 14


State 110

   23 if: IF '(' bool_condition ')' '{' command '}' ELSE '{' . command '}'

    VAR     shift, and go to state 1
    IF      shift, and go to state 2
    WHILE   shift, and go to state 3
    RETURN  shift, and go to state 4
    PRINT   shift, and go to state 5
    INC     shift, and go to state 6
    DEC     shift, and go to state 7

    command       go to state 113
    assignment    go to state 9
    print         go to state 10
    ret           go to state 11
    if            go to state 12
    while         go to state 13
    unary_opertr  go to state 14


State 111

    8 command: command . command
   24 if: IF '(' bool_condition ')' '{' command '}' ELSE command .

    VAR     shift, and go to state 1
    IF      shift, and go to state 2
    WHILE   shift, and go to state 3
    RETURN  shift, and go to state 4
    PRINT   shift, and go to state 5
    INC     shift, and go to state 6
    DEC     shift, and go to state 7

    VAR       [reduce using rule 24 (if)]
    IF        [reduce using rule 24 (if)]
    WHILE     [reduce using rule 24 (if)]
    RETURN    [reduce using rule 24 (if)]
    PRINT     [reduce using rule 24 (if)]
    INC       [reduce using rule 24 (if)]
    DEC       [reduce using rule 24 (if)]
    $default  reduce using rule 24 (if)

    command       go to state 38
    assignment    go to state 9
    print         go to state 10
    ret           go to state 11
    if            go to state 12
    while         go to state 13
    unary_opertr  go to state 14


State 112

   25 if: IF '(' bool_condition ')' command ELSE '{' command '}' .

    $default  reduce using rule 25 (if)


State 113

    8 command: command . command
   23 if: IF '(' bool_condition ')' '{' command '}' ELSE '{' command . '}'

    VAR     shift, and go to state 1
    IF      shift, and go to state 2
    WHILE   shift, and go to state 3
    RETURN  shift, and go to state 4
    PRINT   shift, and go to state 5
    INC     shift, and go to state 6
    DEC     shift, and go to state 7
    '}'     shift, and go to state 114

    command       go to state 38
    assignment    go to state 9
    print         go to state 10
    ret           go to state 11
    if            go to state 12
    while         go to state 13
    unary_opertr  go to state 14


State 114

   23 if: IF '(' bool_condition ')' '{' command '}' ELSE '{' command '}' .

    $default  reduce using rule 23 (if)
